@model WebApplication.Models.AssemblyModels

@using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()
    <div class="box box-warning box-solid" role="dialog" tabindex="-1" id="modal-assembly">
        <div class="box-header">
            <h4>Edit Assembly</h4>
        </div>
        <hr />
        <div id="errorMessage">
        </div>
        <div class="box-group">
            <div class="box-body">
                <fieldset id="modal-assembly">
                    @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { Id = "Id" } })
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="box-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", Id = "aName", disabled = "true" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="box-group">
                        @Html.LabelFor(model => model.Classification, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Classification, new { htmlAttributes = new { @class = "form-control", Id = "aClassification" } })
                            @Html.ValidationMessageFor(model => model.Classification, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="box-group" style="padding-top:100px;">
                        @*<div style="height: 250px; overflow: auto;">*@
                            <table id="assemblyMaterialTable" class="table table-bordered table-striped active">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Code</th>
                                        <th>Description</th>
                                        <th>Quantity</th>
                                        <th>Unit</th>
                                    </tr>
                                </thead>
                                @*<tbody>
                                    @{
                                        var listItems = new List<SelectListItem>();
                                        listItems.Add(new SelectListItem()
                                            {
                                            Text = "Pc"
                                            ,
                                            Value = "0"
                                            });
                                        listItems.Add(new SelectListItem()
                                            {
                                            Text = "Meters"
                                            ,
                                            Value = "1"
                                            });
                                        listItems.Add(new SelectListItem()
                                            {
                                            Text = "Roll"
                                            ,
                                            Value = "2"
                                            });

                                        for (int materialIndex = 0; materialIndex <= Model.CompleteMaterialList.Count - 1; materialIndex++)
                                            {
                                            <tr>
                                                <td class="hidden">@Model.CompleteMaterialList[materialIndex].Id</td>
                                                <td>@Html.CheckBox("materialCheck", Model.CompleteMaterialList[materialIndex].IsSelected)</td>
                                                <td>@Model.CompleteMaterialList[materialIndex].Code</td>
                                                <td>@Model.CompleteMaterialList[materialIndex].Description</td>
                                                <td><input type="number" style="width:50px;" name="assemblyMaterialQuantity" value='@Model.CompleteMaterialList[materialIndex].Quantity' /></td>

                                                <td>
                                                    <select id="material-@Model.CompleteMaterialList[materialIndex].Id">
                                                        @foreach (var item in listItems)
                                                            {
                                                            if (item.Text.ToLower() == Model.CompleteMaterialList[materialIndex].Unit)
                                                                {
                                                                <option value=@item.Value selected="selected">
                                                                    @item.Text
                                                                </option>
                                                                }
                                                            else
                                                                {
                                                                <option value=@item.Value>
                                                                    @item.Text
                                                                </option>
                                                                }
                                                            //item.Selected = item.Text.ToLower() == Model.CompleteMaterialList[materialIndex].Unit ? true : false;
                                                            }
                                                    </select>
                                                </td>
                                                @*<td>@Html.DropDownListFor(Model => "materialIndex" + Model.CompleteMaterialList[materialIndex].Id, listItems, new { htmlAttributes = new { @class = "dropdown" } })</td>
                                            </tr>
                                            }
                                    }
                                    @*foreach (var materialItem in Model.CompleteMaterialList)
                                        {
                                        foreach (var assemblyMaterial in Model.Materials)
                                            {
                                            if (assemblyMaterial.Id == materialItem.Id)
                                                {
                                                <tr>
                                                    <td>@Html.CheckBox("materialCheck", @assemblyMaterial.Id == @materialItem.Id)</td>
                                                    <td>@materialItem.Code</td>
                                                    <td>@materialItem.Description</td>
                                                    <td><input type="number" style="width:50px;" name="assemblyMaterialQuantity" value='@assemblyMaterial.Quantity' /></td>
                                                    @foreach (var item in listItems)
                                                        {
                                                        item.Selected = int.Parse(item.Value) == assemblyMaterial.Unit ? true : false;
                                                        }
                                                    <td>@Html.DropDownListFor(Model => materialItem.Id, listItems, new { htmlAttributes = new { @class = "dropdown" } })</td>
                                                </tr>
                                                }
                                            }
                                            <tr>
                                                <td>@Html.CheckBox("materialCheck", false)</td>
                                                <td>@materialItem.Code</td>
                                                <td>@materialItem.Description</td>
                                                <td><input type="number" style="width:50px;" name="assemblyMaterialQuantity" value='0' /></td>
                                                <td>@Html.DropDownListFor(Model => materialItem.Id, listItems, new { htmlAttributes = new { @class = "dropdown" } })</td>
                                            </tr>
                                        }
                                </tbody>*@
                            </table>
                        @*</div>*@
                    </div>
                </fieldset>
            </div>
            <div class="box-footer">
                <div class="pull-left footer">
                    <button type="button" value="Update" data-dismiss="modal" class="btn btn-primary" id="btnUpdateAssembly" onclick="UpdateAssemblyRecord()">Update</button>
                    <button type="button" value="Close" data-dismiss="modal" class="btn btn-default" onclick="CancelOperation()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
                                            }
